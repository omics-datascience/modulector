version: '3'

services:
    # PostgreSQL (empty DB)
    db:
        image: postgres:12
        container_name: modulector_dev_db
        restart: always
        ports:
            - 5432:5432
        command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
        environment:
            # IMPORTANT: these three params must be the same than POSTGRES_USERNAME, POSTGRES_PASSWORD, POSTGRES_DB
            # below in 'web' service respectively
            POSTGRES_USER: 'modulector'
            POSTGRES_PASSWORD: 'modulector'
            POSTGRES_DB: 'modulector'
        volumes:
            - modulector_postgres_data:/var/lib/postgresql/data/
            - ./config/postgres/postgres.conf:/etc/postgresql/postgresql.conf

    # Ready-to-use image with the imported data. NOTE that this image is several gigabytes in size
    # db:
    #   image: omicsdatascience/modulector-db:1.4
    # Django Proxy Server
    nginx:
        image: nginx:1.19
        ports:
            - 80:8000
        volumes:
            - ./:/src
            - ./config/nginx/conf.d:/etc/nginx/conf.d
            - ./static:/static
        depends_on:
            - web

    # Django Backend Server
    web:
        image: omicsdatascience/modulector:1.4.3
        depends_on:
            - db
        environment:
            # Django
            DJANGO_SETTINGS_MODULE: 'ModulectorBackend.settings_prod'
            POSTGRES_HOST: 'db' # Name of the modulector-db service previously defined
            POSTGRES_USERNAME "modulector"
            POSTGRES_PASSWORD "modulector"
            POSTGRES_PORT 5432
            POSTGRES_DB "modulector"

    # Web-based DB admin interface for MySQL management
    adminer:
        image: adminer
        container_name: modulector_dev_adminer
        restart: always
        ports:
            - 8080:8080

volumes:
    modulector_postgres_data:
        external:
            name: 'modulector-backend_modulector_postgres_data'
